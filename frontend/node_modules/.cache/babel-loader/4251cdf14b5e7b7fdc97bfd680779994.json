{"ast":null,"code":"var _jsxFileName = \"/Users/IuliiaSaprykina/Development/code/Mod4/Projects/meal_app/frontend/src/components/Login.js\";\nimport React, { Component } from \"react\";\nimport NewUserForm from \"./Signup\";\nconst loginUrl = \"http://localhost:3000/login/\";\nconst initailizeState = {\n  username: \"\",\n  password: \"\",\n  error: \"\"\n};\nexport default class Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      error: \"\",\n      users: []\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      fetch(loginUrl, {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify(this.state)\n      }).then(response => {\n        if (response.status === 200) {\n          this.setState({\n            error: \"\"\n          });\n          return response.json();\n        } else if (response.status === 401) {\n          throw new Error(\"Check your username or password\");\n        }\n      }).then(result => {\n        localStorage.setItem(\"token\", result.token);\n      }) // .then(this.props.history.push('/') )\n      .catch(error => this.setState({\n        error: error.message\n      }));\n    };\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n  }\n\n  render() {\n    const {\n      history\n    } = this.props.history;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"login-form\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"username\",\n      id: \"username\",\n      value: this.state.username,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      id: \"password\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      id: \"submit\",\n      value: \"Login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }), this.state.error ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 42\n      }\n    }, this.state.error) : null));\n  }\n\n}","map":{"version":3,"sources":["/Users/IuliiaSaprykina/Development/code/Mod4/Projects/meal_app/frontend/src/components/Login.js"],"names":["React","Component","NewUserForm","loginUrl","initailizeState","username","password","error","Login","state","users","handleSubmit","event","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","status","setState","json","Error","result","localStorage","setItem","token","catch","message","handleChange","name","value","target","render","history","props"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport NewUserForm from \"./Signup\";\n\n\nconst loginUrl =\"http://localhost:3000/login/\";\n\nconst initailizeState = {\n    username: \"\",\n    password: \"\",\n     error: \"\",\n   \n}\n\n\nexport default class Login extends Component {\n\n    state = {\n        username: \"\",\n        password: \"\",\n        error: \"\",\n        users: []\n    }\n\n\n    // componentDidMount(){\n    //     this.getUsers()\n    // }\n    \n    // getUsers = () => {\n    //     fetch(usersUrl, )\n    //       .then(response => response.json())\n    //       .then(users => this.setState({users}))\n    // }\n    \n    \n    // addUser = (user) => {\n    //     this.setState({\n    //       users: [...this.state.users, user]\n    //     })\n    \n    //     let newUser = {\n    //       ...user\n    //     }\n    \n    //     fetch(usersUrl, {\n    //       method: \"POST\",\n    //       headers: {\n    //         'Content-type': 'application/json'\n    //       },\n    //       body: JSON.stringify(newUser)\n    //     })\n    //         .then(response => response.ok ? this.props.history.push('/') : this.props.history.push('/login') )\n    // }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n\n        fetch(loginUrl, {\n            method: \"POST\",\n            headers: {\n                \"Content-type\" : \"application/json\"\n            },\n            body: JSON.stringify(this.state)\n        })\n            .then(response => {\n                if (response.status === 200) {\n                    this.setState({error: \"\"})\n                    return response.json()\n                } else if (response.status === 401){\n                    throw new Error(\"Check your username or password\")\n                }\n            })\n            .then(result => {\n                localStorage.setItem(\"token\", result.token);\n            })\n            // .then(this.props.history.push('/') )\n            .catch(error => this.setState({error: error.message}));\n        }\n\n\n    handleChange = (event) => {\n        const {name, value} = event.target;\n        this.setState({\n            [name]: value\n        })\n    }\n\n    render(){\n        const {history} = this.props.history\n        return (\n            <>\n                <form className=\"login-form\" onSubmit={this.handleSubmit}>\n                    <h1>Login</h1>\n                    <label>Username</label>\n                    <input name=\"username\" id=\"username\"value={this.state.username} onChange={this.handleChange}/>\n                    <label>Password</label>\n                    <input type=\"password\" id=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n                    <input type=\"submit\" id=\"submit\" value=\"Login\"/>\n                    { this.state.error ? <p>{this.state.error}</p> : null}\n                    {/* { console.log(this.state.error)} */}\n\n                </form>\n                {/* <NewUserForm users={this.state.users} addUser={this.addUser} /> */}\n            </>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}