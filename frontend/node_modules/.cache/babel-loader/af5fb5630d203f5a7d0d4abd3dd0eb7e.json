{"ast":null,"code":"var _jsxFileName = \"/Users/IuliiaSaprykina/Development/code/Mod4/Projects/meal_app/frontend/src/components/Login.js\";\nimport React, { Component } from \"react\";\nimport NewUserForm from \"./NewUserForm\";\nconst usersUrl = \"http://localhost:3000/users\";\nconst loginUrl = \"http://localhost:3000/login/\";\nexport default class Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      error: \"\",\n      users: []\n    };\n\n    this.getUsers = () => {\n      fetch(usersUrl, {\n        method: \"GET\",\n        headers: {\n          \"Content-type\": \"application.json\",\n          \"Authorization\": `Baerer ${localStorage.token}`\n        }\n      }).then(response => response.json()).then(users => this.setState({\n        users\n      }));\n    };\n\n    this.addUser = user => {\n      this.setState({\n        users: [...this.state.users, user]\n      });\n      let newUser = { ...user\n      };\n      fetch(usersUrl, {\n        method: \"POST\",\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(newUser)\n      }).then(response => response.ok ? this.props.history.push('/') : this.props.history.push('/login'));\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      fetch(loginUrl, {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify(this.state)\n      }).then(response => {\n        if (response.status === 200) {\n          this.setState({\n            error: \"\"\n          });\n          return response.json();\n        } else if (response.status === 401) {\n          throw new Error(\"Check your username or password\");\n        }\n      }).then(result => {\n        localStorage.setItem(\"token\", result.token);\n        this.props.setCats(result.cats);\n      }).catch(error => this.setState({\n        error: error.message\n      }));\n    };\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getUsers();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"login-form\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"username\",\n      id: \"username\",\n      value: this.state.username,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      id: \"password\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      id: \"submit\",\n      value: \"Login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/IuliiaSaprykina/Development/code/Mod4/Projects/meal_app/frontend/src/components/Login.js"],"names":["React","Component","NewUserForm","usersUrl","loginUrl","Login","state","username","password","error","users","getUsers","fetch","method","headers","localStorage","token","then","response","json","setState","addUser","user","newUser","body","JSON","stringify","ok","props","history","push","handleSubmit","event","preventDefault","status","Error","result","setItem","setCats","cats","catch","message","handleChange","name","value","target","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport NewUserForm from \"./NewUserForm\";\n\nconst usersUrl =\"http://localhost:3000/users\";\nconst loginUrl =\"http://localhost:3000/login/\";\n\n\nexport default class Login extends Component {\n\n    state = {\n        username: \"\",\n        password: \"\",\n        error: \"\",\n        users: []\n    }\n\n    componentDidMount(){\n        this.getUsers()\n    }\n    \n    getUsers = () => {\n        fetch(usersUrl, {\n            method: \"GET\",\n            headers: {\n                \"Content-type\" : \"application.json\",\n                \"Authorization\" : `Baerer ${localStorage.token}`\n            }\n        })\n          .then(response => response.json())\n          .then(users => this.setState({users}))\n    }\n    \n    \n    addUser = (user) => {\n        this.setState({\n          users: [...this.state.users, user]\n        })\n    \n        let newUser = {\n          ...user\n        }\n    \n        fetch(usersUrl, {\n          method: \"POST\",\n          headers: {\n            'Content-type': 'application/json'\n          },\n          body: JSON.stringify(newUser)\n        })\n            .then(response => response.ok ? this.props.history.push('/') : this.props.history.push('/login') )\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n\n        fetch(loginUrl, {\n            method: \"POST\",\n            headers: {\n                \"Content-type\" : \"application/json\"\n            },\n            body: JSON.stringify(this.state)\n        })\n            .then(response => {\n                if (response.status === 200) {\n                    this.setState({error: \"\"})\n                    return response.json()\n                } else if (response.status === 401){\n                    throw new Error(\"Check your username or password\")\n                }\n            })\n            .then(result => {\n                localStorage.setItem(\"token\", result.token);\n                this.props.setCats(result.cats)\n            })\n            .catch(error => this.setState({error: error.message}));\n        }\n\n\n    handleChange = (event) => {\n        const {name, value} = event.target;\n        this.setState({\n            [name]: value\n        })\n    }\n\n    render(){\n        return (\n            <>\n                <form className=\"login-form\" onSubmit={this.handleSubmit}>\n                    <h1>Login</h1>\n                    <label>Username</label>\n                    <input name=\"username\" id=\"username\"value={this.state.username} onChange={this.handleChange}/>\n                    <label>Password</label>\n                    <input type=\"password\" id=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n                    <input type=\"submit\" id=\"submit\" value=\"Login\"/>\n                </form>\n                {/* <NewUserForm users={this.state.users} addUser={this.addUser} /> */}\n            </>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}