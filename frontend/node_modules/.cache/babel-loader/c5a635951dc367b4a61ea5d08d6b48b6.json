{"ast":null,"code":"var _jsxFileName = \"/Users/IuliiaSaprykina/Development/code/Mod4/Projects/meal_app/src/App.js\";\nimport React, { Component } from 'react';\nimport SearchBar from './components/SearchBarSearchBar';\nimport RecipesContainer from './components/RecipesContainerRecipesContainer';\nimport './App.css';\nconst id = \"0492f55a\";\nconst key = \"8123095da3de3104e83077e6e4cb6506\t\";\nlet url = \"https://api.edamam.com/search?\";\n\nconst getRequest = (query, onlyVegan) => {\n  return url + \"q=\" + processQuery(query) + \"&app_id=\" + id + \"&app_key=\" + key + \"&health=vegetarian\" + (onlyVegan ? \"&health=vegan\" : \"\") + \"&from=0&to=20\";\n};\n\nconst processQuery = query => {\n  let queryArray = query.toLowerCase().split(/\\s+/);\n  let queryString = \"\";\n\n  for (let i = 0; i < queryArray.length - 1; i++) {\n    queryString += queryArray[i] + \"+\";\n  }\n\n  queryString += queryArray[queryArray.length - 1];\n  return queryString;\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      suggestions: [],\n      recipesResult: null,\n      error: false,\n      noResults: false,\n      inputFocus: false,\n      loading: false\n    };\n    this.mounted = false;\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.toggleFocus = this.toggleFocus.bind(this);\n  }\n\n  toggleFocus() {\n    this.setState(prevState => ({\n      inputFocus: !prevState.inputFocus\n    }));\n  }\n\n  handleSubmit(query, onlyVegan) {\n    this.setState({\n      loading: true\n    });\n    fetch(getRequest(query, onlyVegan)).then(res => res.json()).then(result => {\n      if (result[\"count\"] === 0) {\n        this.setState({\n          noResults: true,\n          loading: false\n        });\n      } else {\n        this.setState({\n          recipesResult: result[\"hits\"],\n          loading: false\n        });\n      }\n    }, error => {\n      this.setState({\n        error: true,\n        loading: false\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    fetch(\"assets/suggestions.json\").then(res => res.json()).then(result => {\n      if (this.mounted) {\n        this.setState({\n          suggestions: result\n        });\n      }\n    }, error => {\n      //if error occurs, keep suggestions an empty array\n      //autosuggest will not work, it will be a regular text input component\n      console.error(\"Sorry, an error occurred while trying to get suggestion data.\");\n    });\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    let recipesContainer;\n    if (this.state.loading) recipesContainer = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 27\n      }\n    }, \"Loading...\");else if (this.state.error) recipesContainer = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 27\n      }\n    }, \"Sorry, something went wrong.\");else if (this.state.noResults) recipesContainer = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 27\n      }\n    }, \"Sorry, no results found for your search.\");else if (this.state.recipesResult) recipesContainer = /*#__PURE__*/React.createElement(RecipesContainer, {\n      recipes: this.state.recipesResult,\n      suggestionsOpen: this.state.inputFocus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 27\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }\n    }, \"PRESTO\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }\n    }, \"A vegan & vegetarian recipe search engine!\")), /*#__PURE__*/React.createElement(SearchBar, {\n      onSubmit: this.handleSubmit,\n      toggleFocus: this.toggleFocus,\n      suggestions: this.state.suggestions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }\n    }), recipesContainer);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/IuliiaSaprykina/Development/code/Mod4/Projects/meal_app/src/App.js"],"names":["React","Component","SearchBar","RecipesContainer","id","key","url","getRequest","query","onlyVegan","processQuery","queryArray","toLowerCase","split","queryString","i","length","App","constructor","state","suggestions","recipesResult","error","noResults","inputFocus","loading","mounted","handleSubmit","bind","toggleFocus","setState","prevState","fetch","then","res","json","result","componentDidMount","console","componentWillUnmount","render","recipesContainer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,OAAOC,gBAAP,MAA6B,+CAA7B;AAGA,OAAO,WAAP;AAEA,MAAMC,EAAE,GAAG,UAAX;AACA,MAAMC,GAAG,GAAG,mCAAZ;AACA,IAAIC,GAAG,GAAG,gCAAV;;AAGA,MAAMC,UAAU,GAAG,CAACC,KAAD,EAAQC,SAAR,KAAsB;AACvC,SAAOH,GAAG,GAAG,IAAN,GAAaI,YAAY,CAACF,KAAD,CAAzB,GAAmC,UAAnC,GAAgDJ,EAAhD,GAAqD,WAArD,GAAmEC,GAAnE,GAAyE,oBAAzE,IACFI,SAAS,GAAG,eAAH,GAAqB,EAD5B,IACkC,eADzC;AAED,CAHD;;AAKA,MAAMC,YAAY,GAAIF,KAAD,IAAW;AAC9B,MAAIG,UAAU,GAAGH,KAAK,CAACI,WAAN,GAAoBC,KAApB,CAA0B,KAA1B,CAAjB;AACA,MAAIC,WAAW,GAAG,EAAlB;;AAEA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGJ,UAAU,CAACK,MAAX,GAAkB,CAArC,EAAwCD,CAAC,EAAzC,EAA6C;AAC3CD,IAAAA,WAAW,IAAIH,UAAU,CAACI,CAAD,CAAV,GAAgB,GAA/B;AACD;;AAEDD,EAAAA,WAAW,IAAIH,UAAU,CAACA,UAAU,CAACK,MAAX,GAAkB,CAAnB,CAAzB;AAEA,SAAOF,WAAP;AACD,CAXD;;AAaA,MAAMG,GAAN,SAAkBhB,SAAlB,CAA4B;AAC1BiB,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE,EADF;AAEXC,MAAAA,aAAa,EAAE,IAFJ;AAGXC,MAAAA,KAAK,EAAE,KAHI;AAIXC,MAAAA,SAAS,EAAE,KAJA;AAKXC,MAAAA,UAAU,EAAE,KALD;AAMXC,MAAAA,OAAO,EAAE;AANE,KAAb;AASA,SAAKC,OAAL,GAAe,KAAf;AAEA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDC,EAAAA,WAAW,GAAG;AACZ,SAAKC,QAAL,CAAcC,SAAS,KAAK;AAC1BP,MAAAA,UAAU,EAAE,CAACO,SAAS,CAACP;AADG,KAAL,CAAvB;AAGD;;AAEDG,EAAAA,YAAY,CAACnB,KAAD,EAAQC,SAAR,EAAmB;AAC7B,SAAKqB,QAAL,CAAc;AACZL,MAAAA,OAAO,EAAE;AADG,KAAd;AAIAO,IAAAA,KAAK,CAACzB,UAAU,CAACC,KAAD,EAAQC,SAAR,CAAX,CAAL,CACGwB,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAESG,MAAD,IAAY;AAChB,UAAGA,MAAM,CAAC,OAAD,CAAN,KAAoB,CAAvB,EAA0B;AACxB,aAAKN,QAAL,CAAc;AACZP,UAAAA,SAAS,EAAE,IADC;AAEZE,UAAAA,OAAO,EAAE;AAFG,SAAd;AAID,OALD,MAKO;AACL,aAAKK,QAAL,CAAc;AACZT,UAAAA,aAAa,EAAEe,MAAM,CAAC,MAAD,CADT;AAEZX,UAAAA,OAAO,EAAE;AAFG,SAAd;AAID;AACF,KAdH,EAcMH,KAAD,IAAW;AACZ,WAAKQ,QAAL,CAAc;AACZR,QAAAA,KAAK,EAAE,IADK;AAEZG,QAAAA,OAAO,EAAE;AAFG,OAAd;AAID,KAnBH;AAoBH;;AAECY,EAAAA,iBAAiB,GAAG;AAClB,SAAKX,OAAL,GAAe,IAAf;AACAM,IAAAA,KAAK,CAAC,yBAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAESG,MAAD,IAAY;AAChB,UAAG,KAAKV,OAAR,EAAgB;AACd,aAAKI,QAAL,CAAc;AACZV,UAAAA,WAAW,EAAEgB;AADD,SAAd;AAGD;AACF,KARH,EAQMd,KAAD,IAAW;AACZ;AACA;AACAgB,MAAAA,OAAO,CAAChB,KAAR,CAAc,+DAAd;AACD,KAZH;AAaD;;AAEDiB,EAAAA,oBAAoB,GAAG;AACrB,SAAKb,OAAL,GAAe,KAAf;AACD;;AAEDc,EAAAA,MAAM,GAAG;AACP,QAAIC,gBAAJ;AAEA,QAAG,KAAKtB,KAAL,CAAWM,OAAd,EACEgB,gBAAgB,gBAAI;AAAK,MAAA,SAAS,EAAG,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAApB,CADF,KAEK,IAAG,KAAKtB,KAAL,CAAWG,KAAd,EACHmB,gBAAgB,gBAAI;AAAK,MAAA,SAAS,EAAG,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAApB,CADG,KAEA,IAAG,KAAKtB,KAAL,CAAWI,SAAd,EACHkB,gBAAgB,gBAAI;AAAK,MAAA,SAAS,EAAG,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDAApB,CADG,KAEA,IAAG,KAAKtB,KAAL,CAAWE,aAAd,EACHoB,gBAAgB,gBAAI,oBAAC,gBAAD;AAAkB,MAAA,OAAO,EAAI,KAAKtB,KAAL,CAAWE,aAAxC;AAAuD,MAAA,eAAe,EAAI,KAAKF,KAAL,CAAWK,UAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAApB;AAEF,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAG,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDAHF,CADF,eAME,oBAAC,SAAD;AACE,MAAA,QAAQ,EAAI,KAAKG,YADnB;AAEE,MAAA,WAAW,EAAI,KAAKE,WAFtB;AAGE,MAAA,WAAW,EAAI,KAAKV,KAAL,CAAWC,WAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,EAUGqB,gBAVH,CADF;AAcD;;AAlGyB;;AAqG5B,eAAexB,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport SearchBar from './components/SearchBarSearchBar';\nimport RecipesContainer from './components/RecipesContainerRecipesContainer';\n\n\nimport './App.css';\n\nconst id = \"0492f55a\";\nconst key = \"8123095da3de3104e83077e6e4cb6506\t\";\nlet url = \"https://api.edamam.com/search?\";\n\n\nconst getRequest = (query, onlyVegan) => {\n  return url + \"q=\" + processQuery(query) + \"&app_id=\" + id + \"&app_key=\" + key + \"&health=vegetarian\"\n    + (onlyVegan ? \"&health=vegan\" : \"\") + \"&from=0&to=20\";\n};\n\nconst processQuery = (query) => {\n  let queryArray = query.toLowerCase().split(/\\s+/);\n  let queryString = \"\";\n\n  for(let i = 0; i < queryArray.length-1; i++) {\n    queryString += queryArray[i] + \"+\";\n  }\n\n  queryString += queryArray[queryArray.length-1];\n\n  return queryString;\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      suggestions: [],\n      recipesResult: null,\n      error: false,\n      noResults: false,\n      inputFocus: false,\n      loading: false\n    };\n\n    this.mounted = false;\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.toggleFocus = this.toggleFocus.bind(this);\n  }\n\n  toggleFocus() {\n    this.setState(prevState => ({\n      inputFocus: !prevState.inputFocus\n    }));\n  }\n\n  handleSubmit(query, onlyVegan) {\n    this.setState({\n      loading: true\n    });\n\n    fetch(getRequest(query, onlyVegan))\n      .then(res => res.json())\n      .then((result) => {\n        if(result[\"count\"] === 0) {\n          this.setState({\n            noResults: true,\n            loading: false\n          });\n        } else {\n          this.setState({\n            recipesResult: result[\"hits\"],\n            loading: false\n          });\n        }\n      }, (error) => {\n        this.setState({\n          error: true,\n          loading: false\n        });\n      });\n}\n\n  componentDidMount() {\n    this.mounted = true;\n    fetch(\"assets/suggestions.json\")\n      .then(res => res.json())\n      .then((result) => {\n        if(this.mounted){\n          this.setState({\n            suggestions: result\n          });\n        }\n      }, (error) => {\n        //if error occurs, keep suggestions an empty array\n        //autosuggest will not work, it will be a regular text input component\n        console.error(\"Sorry, an error occurred while trying to get suggestion data.\");\n      });\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    let recipesContainer;\n\n    if(this.state.loading)\n      recipesContainer = (<div className = \"loading\">Loading...</div>);\n    else if(this.state.error)\n      recipesContainer = (<div className = \"error\">Sorry, something went wrong.</div>);\n    else if(this.state.noResults)\n      recipesContainer = (<div className = \"error\">Sorry, no results found for your search.</div>);\n    else if(this.state.recipesResult)\n      recipesContainer = (<RecipesContainer recipes = {this.state.recipesResult} suggestionsOpen = {this.state.inputFocus} />);\n\n    return (\n      <div className=\"app\">\n        <div className = \"heading\">\n          <h1>PRESTO</h1>\n          {/* <img src={vegSign} alt=\"Veg Sign\"/> */}\n          <p>A vegan & vegetarian recipe search engine!</p>\n        </div>\n        <SearchBar\n          onSubmit = {this.handleSubmit}\n          toggleFocus = {this.toggleFocus}\n          suggestions = {this.state.suggestions} />\n        {recipesContainer}\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}